include_directories(${PROJECT_SOURCE_DIR} ${HUSKY_EXTERNAL_INCLUDE})

set(husky-kylin core-metadata husky)

### Reuse gtest in Husky

get_directory_property(GTEST_LIBRARY DIRECTORY ${PROJECT_SOURCE_DIR}/husky/test DEFINITION GTEST_LIBRARIES GTEST_LIBRARY)
message(STATUS "Will use GTest used in Husky:")
message(STATUS "  (Library should be)       ${GTEST_LIBRARY}")

### Unit Test
file(GLOB_RECURSE UNITTEST_FILES ${PROJECT_SOURCE_DIR}/*_test.cpp)
add_executable(UnitTest ${UNITTEST_FILES} unittest_main.cpp)
add_dependencies(UnitTest gtest)
target_link_libraries(UnitTest ${husky-kylin})
target_link_libraries(UnitTest ${EXTERNAL_LIB})
target_link_libraries(UnitTest ${HUSKY_EXTERNAL_LIB})
target_link_libraries(UnitTest ${GTEST_LIBRARY})
target_link_libraries(UnitTest ${GMOCK_LIBRARY})

### Functional Test

# TestXXX Template
# add_executable(TestXXX test-xxx.cpp)
# target_link_libraries(TestXXX ${husky})
# target_link_libraries(TestXXX ${HUSKY_EXTERNAL_LIB})
